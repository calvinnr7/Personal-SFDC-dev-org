<apex:page controller="geoNamesController" standardStylesheets="true" showHeader="false" sidebar="false" title="Coding Assignment">
<!-- bluewolf coding assignment -->
<!-- Programmer: Calvin Richard Noronha -->
<head>
    <title>Coding Assignment - Calvin Noronha</title>
    </head>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"> </script>
    <script type="text/javascript">
    //Google map variable
    var map = null;
    //Array to store results sent from APEX controller, used to populate markers
    var locations = [];
  
        //Function to initialize google map and markers         
        function initialize()
        {           
            
            var myLatlng = new google.maps.LatLng(locations[0].lat, locations[0].lng);              
            var mapOptions = {
            zoom: 5,
            center: myLatlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            
            //Instantiate map object
            map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);       
            
            var marker, i;          
            for (i = 0; i < locations.length; i++) 
            {
                //Create markers
                new google.maps.Marker({
                  position: new google.maps.LatLng(locations[i].lat, locations[i].lng),
                  map: map, 
                  title: "Latitude = " + locations[i].lat + ", " + "Longitude = " + locations[i].lng + ", " +"Magnitude of quake = " + locations[i].mag + ", " + "Depth = " + locations[i].depth
                  });
            }  

        } 
        
         //Class to store marker data in array
         function markerGrp(lat,lng,mag,depth) 
         {
            this.lat = lat;
            this.lng = lng;
            this.mag = mag;
            this.depth = depth;
            
        } 
 
    </script>

    
    
      <apex:form >
      
      <apex:outputPanel id="outMap">
      <script type="text/javascript">  
        
        //Function to initialize array with data from APEX contoller.
        function popMapData()
        {           
            locations = [];
            <apex:repeat value="{!eqDetailsList}" var="eq">
            //console.log({!eq.lat});
            locations.push(new markerGrp('{!eq.lat}','{!eq.lng}','{!eq.magnitude}','{!eq.depth}'));
           
            </apex:repeat>      
            
            //Initialize Google map
            initialize();
        }
        
        </script>
      
      </apex:outputPanel>
      
      <apex:pageMessages id="errorMsgs" />
      <apex:pageBlock >
      
       <apex:pageBlockSection columns="1" title="Find Earthquakes near a given city/location">
        <apex:pageBlockSectionItem >
         <apex:outputLabel value="Enter the name of a city/location:"></apex:outputLabel>
         <apex:outputPanel >
            <apex:inputText value="{!inputCity}"/> <apex:commandButton value="Search" action="{!runSearch}" reRender="outMap,googleMap,errorMsgs" onComplete="popMapData();"/>
         </apex:outputPanel>
         
        </apex:pageBlockSectionItem>
        </apex:pageBlockSection>
        
        
        

        <apex:pageBlockSection title="Google Map" id="googleMap">
            <div id="map_canvas" style="width: 900px;height: 550px"></div>  
            
        </apex:pageBlockSection>
        
       
        <apex:pageBlockSection title="Top 10 quakes in the past year" id="topTenQuakes">
            <apex:pageBlocktable value="{!topTenQuakes}" var="eq">
            
                 <apex:column headerValue="Occured On">              
                    <apex:outputText value="{0,date,yyyy.MM.dd 'at' HH:mm:ss}">
                        <apex:param value="{!eq.dateOfOccurence}" />
                    </apex:outputText>
                 </apex:column>
                 <apex:column value="{!eq.lat}" headerValue="Latitude"/>
                 <apex:column value="{!eq.lng}" headerValue="Longitude"/>
                 <apex:column value="{!eq.magnitude}" headerValue="Magnitude"/>
                 <apex:column value="{!eq.depth}" headerValue="Depth"/>
            
           </apex:pageBlocktable>
         </apex:pageBlockSection>      
        
        </apex:pageBlock>
        
       
    </apex:form>
            
    
</apex:page>